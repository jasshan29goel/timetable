{"version":3,"sources":["context.js","components/timeSlots/TimeSlot.js","components/timeSlots/TimeSlots.js","components/layout/FormElement.js","components/timeSlots/AddTimeSlot.js","components/timeSlots/EditTimeSlot.js","components/layout/Header.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","timeSlots","filter","timeSlot","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","TimeSlot","onDeleteClick","a","async","delete","startTime","endTime","name","place","day","className","style","cursor","float","color","onClick","bind","to","marginRight","TimeSlots","Fragment","key","FormElement","label","placeholder","onChange","htmlFor","required","AddTimeSlot","e","target","onSubmit","preventDefault","newTimeSlot","post","history","push","EditTimeSlot","match","params","put","temp","Header","header","href","defaultProps","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90693170.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nconst Context = React.createContext();\n\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n      case 'DELETE_TIMESLOT':\n        return {\n          ...state,\n          timeSlots: state.timeSlots.filter(\n            timeSlot => timeSlot.id !== action.payload\n          )\n        };\n      case 'ADD_TIMESLOT':\n        return{\n          ...state,\n          timeSlots:[action.payload,...state.timeSlots]\n        };\n      case 'EDIT_TIMESLOT':\n        return{\n          ...state,\n          timeSlots: state.timeSlots.map(\n            timeSlot =>\n            timeSlot.id === action.payload.id\n                ? (timeSlot = action.payload)\n                : timeSlot)\n        };\n      default:\n        return state;\n    }\n};\n\n  \n\nexport class Provider extends Component {\n  state = {\n    timeSlots: [ ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  async componentDidMount(){\n    const res = await axios.get('https://my-json-server.typicode.com/jasshan29goel/timetable/timeSlots');\n\n    this.setState({ timeSlots: res.data });\n    }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\n\n class TimeSlot extends Component {\n\n    onDeleteClick = async (id, dispatch) => {\n        try {\n          await axios.delete(`https://my-json-server.typicode.com/jasshan29goel/timetable/timeSlots/${id}`);\n          dispatch({ type: 'DELETE_TIMESLOT', payload: id });\n        } catch (e) {\n          dispatch({ type: 'DELETE_TIMESLOT', payload: id });\n        }\n      };\n    render() {\n        const {id, startTime ,endTime, name , place , day}= this.props.timeSlot;\n        return (\n            <Consumer>\n              {value => {\n                const { dispatch } = value;\n                return (\n                    <div className=\"card card-body mb-3\">\n                        <h4>\n                            {startTime}-{endTime}\n                            <i\n                        className=\"fa fa-trash\"\n                        style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                        onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                            />\n                            <Link to={`/edit/${id}`}>\n                        <i\n                        className=\"fas fa-pencil-alt\"\n                        style={{ cursor: 'pointer', float: 'right', color: 'black',marginRight: 16 }}\n                            />\n                            </Link>\n                        </h4>\n                    \n                        <ul className=\"list-group\">\n                        <li className=\"list-group-item\">Name:{name}</li>\n                        <li className=\"list-group-item\">Place: {place}</li>\n                        <li className=\"list-group-item\">Day: {day}</li>\n                        </ul>\n                    \n                    </div>\n                    \n                    \n                )\n              }}\n            </Consumer>\n        )\n    }\n}\n\nTimeSlot.propTypes={\n    timeSlot : PropTypes.object.isRequired,\n};\nexport default TimeSlot;","import React, { Component } from 'react';\nimport TimeSlot from './TimeSlot';\nimport { Consumer } from '../../context';\n\nclass TimeSlots extends Component {\n  render() {\n    return (\n      <Consumer>{\n            value => {\n                const { timeSlots } = value;\n                return (\n                    <React.Fragment>\n                    {timeSlots.map(timeSlot => (\n                        <TimeSlot key={timeSlot.id} timeSlot={timeSlot} />\n                    ))}\n                    </React.Fragment>\n                );\n            }\n        }\n      </Consumer>\n    );\n  }\n}\n\nexport default TimeSlots;","import React from 'react';\n//import PropTypes from 'prop-types';\n\nconst FormElement = (props) => {\n    const {label,name,placeholder,type,value,onChange}=props\n    return (\n        <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input\n            type={type}\n            name={name}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n            className=\"form-control form-control-lg\"\n            required\n        />\n        </div>\n    )\n}\n// FormElement.defaultProps={\n//     header:\"Time Table\"\n// };\n// FormElement.propTypes={\n//     header : PropTypes.string.isRequired\n// };\nexport default FormElement;","import React, { Component } from 'react';\nimport FormElement from '../layout/FormElement';\nimport { Consumer } from '../../context';\nimport axios from \"axios\";\nclass AddTimeSlot extends Component {\n    state = {\n        startTime:\"\",\n        endTime:\"\",\n        name:\"\",\n        place:\"\",\n        day:\"\",\n    }\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n    \n        const { startTime,endTime,name,place,day } = this.state;\n    \n        const newTimeSlot = {\n          startTime,\n          endTime,\n          name,\n          place,\n          day\n        };\n            \n        const res = await axios.post(\"https://my-json-server.typicode.com/jasshan29goel/timetable/timeSlots/\",newTimeSlot);\n        dispatch({ type: 'ADD_TIMESLOT', payload: res.data });\n    \n        // Clear State\n        this.setState({\n          startTime: '',\n          endTime: '',\n          name: '',\n          place: '',\n          day: '',\n        });\n        this.props.history.push('/');\n      };\n\n    render() {\n        const {startTime,endTime,name,place,day}=this.state;\n        return (\n            <Consumer>{\n                  value => {\n                      const { dispatch } = value;\n                        return (\n\n                            <div className=\"card mb-3\">\n                                <div className=\"card-header\">Add Time Slot\n                                </div>\n                                <div className=\"card-body\">\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <FormElement label=\"Start Time\"  name=\"startTime\" placeholder=\"Enter Start Time\" type=\"text\" value={startTime} onChange={this.onChange}/>\n                                    <FormElement label=\"End Time\"  name=\"endTime\" placeholder=\"Enter End Time\" type=\"text\" value={endTime} onChange={this.onChange}/>\n                                    <FormElement label=\"Course Name\"  name=\"name\" placeholder=\"Enter Course Name\" type=\"text\" value={name} onChange={this.onChange}/>\n                                    <FormElement label=\"Place\"  name=\"place\" placeholder=\"Enter Place\" type=\"text\" value={place} onChange={this.onChange}/>\n                                    <FormElement label=\"Day\"  name=\"day\" placeholder=\"Enter Day\" type=\"text\" value={day} onChange={this.onChange}/>\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Add Time Slot\"\n                                        className=\"btn btn-light btn-block\"\n                                        />\n                                    </form> \n                                </div>\n                            </div>\n                        )\n            \n                  }\n                }\n            </Consumer> \n        );\n\n    }\n}\n\nexport default AddTimeSlot;","import React, { Component } from 'react';\nimport FormElement from '../layout/FormElement';\nimport { Consumer } from '../../context';\nimport axios from \"axios\";\nclass EditTimeSlot extends Component {\n    state = {\n        startTime:\"\",\n        endTime:\"\",\n        name:\"\",\n        place:\"\",\n        day:\"\",\n    }\n    async componentDidMount(){\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://my-json-server.typicode.com/jasshan29goel/timetable/timeSlots/${id}`);\n         \n        const temp=res.data;\n\n        this.setState({ \n            startTime: temp.startTime,\n            endTime: temp.endTime,\n            name: temp.name,\n            place: temp.place,\n            day: temp.day \n        });\n    }\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n    \n        const { startTime,endTime,name,place,day } = this.state;\n    \n        const newTimeSlot = {\n          startTime,\n          endTime,\n          name,\n          place,\n          day\n        };\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://my-json-server.typicode.com/jasshan29goel/timetable/timeSlots/${id}`,newTimeSlot);\n        dispatch({ type: 'EDIT_TIMESLOT', payload: res.data });\n    \n        // Clear State\n        this.setState({\n          startTime: '',\n          endTime: '',\n          name: '',\n          place: '',\n          day: '',\n        });\n        this.props.history.push('/');\n      };\n\n    render() {\n        const {startTime,endTime,name,place,day}=this.state;\n        return (\n            <Consumer>{\n                  value => {\n                      const { dispatch } = value;\n                        return (\n\n                            <div className=\"card mb-3\">\n                                <div className=\"card-header\">Edit Time Slot\n                                </div>\n                                <div className=\"card-body\">\n                                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <FormElement label=\"Start Time\"  name=\"startTime\" placeholder=\"Enter Start Time\" type=\"text\" value={startTime} onChange={this.onChange}/>\n                                    <FormElement label=\"End Time\"  name=\"endTime\" placeholder=\"Enter End Time\" type=\"text\" value={endTime} onChange={this.onChange}/>\n                                    <FormElement label=\"Course Name\"  name=\"name\" placeholder=\"Enter Course Name\" type=\"text\" value={name} onChange={this.onChange}/>\n                                    <FormElement label=\"Place\"  name=\"place\" placeholder=\"Enter Place\" type=\"text\" value={place} onChange={this.onChange}/>\n                                    <FormElement label=\"Day\"  name=\"day\" placeholder=\"Enter Day\" type=\"text\" value={day} onChange={this.onChange}/>\n                                    <input\n                                        type=\"submit\"\n                                        value=\"Edit Time Slot\"\n                                        className=\"btn btn-light btn-block\"\n                                        />\n                                    </form> \n                                </div>\n                            </div>\n                        )\n            \n                  }\n                }\n            </Consumer> \n        );\n\n    }\n}\n\nexport default EditTimeSlot;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n    const {header}=props\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n            {header}\n          </a>\n          <div>\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />   Home     \n                </Link>  \n              </li>\n              <li className=\"nav-item\">\n                <Link to=\"/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />  Add     \n                </Link> \n              </li>\n              \n            </ul>\n          </div>\n        </div>\n      </nav>\n    )\n}\nHeader.defaultProps={\n    header:\"Time Table\"\n};\nHeader.propTypes={\n    header : PropTypes.string.isRequired\n};\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};","import React , {Component} from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport TimeSlots from './components/timeSlots/TimeSlots';\nimport AddTimeSlot from './components/timeSlots/AddTimeSlot';\nimport EditTimeSlot from './components/timeSlots/EditTimeSlot';\nimport Header from './components/layout/Header';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport NotFound from './components/pages/NotFound';\n\nimport {Provider} from \"./context\"\nimport './App.css';\n\nclass  App extends Component{\n  render () {\n    return (\n      <Provider>\n        <Router>\n      <div className=\"App\">\n      <Header header=\"Time Table\"/>\n        <div className=\"container\">\n        <Switch>\n                <Route exact path=\"/\" component={TimeSlots} />\n                <Route exact path=\"/add\" component={AddTimeSlot} />\n                <Route exact path=\"/edit/:id\" component={EditTimeSlot} />\n                <Route component={NotFound} />\n              </Switch>\n        </div>\n      </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}